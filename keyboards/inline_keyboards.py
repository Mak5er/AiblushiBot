from aiogram.types import InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder


def approve_reject_kb(user_id: int):
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="‚úÖ –°—Ö–≤–∞–ª–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞", callback_data=f"approve_{user_id}"),
        InlineKeyboardButton(text="‚ùå –í—ñ–¥—Ö–∏–ª–∏—Ç–∏ –∑–∞–ø–∏—Ç", callback_data=f"reject_{user_id}")
    )
    return builder.as_markup()


# –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–∏–±–æ—Ä—É –ø–∞—Ä—Ç–Ω–µ—Ä—ñ–≤
confirm_partners_kb = InlineKeyboardBuilder()
confirm_partners_kb.add(InlineKeyboardButton(text="‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –≤–∏–±—Ä–∞–Ω–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä—ñ–≤", callback_data="confirm_partners"))
confirm_partners_kb.add(InlineKeyboardButton(text="‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏ –≤–∏–±—ñ—Ä", callback_data="cancel_selection"))
confirm_partners_kb = confirm_partners_kb.as_markup()

# –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ —Ä–æ–±—ñ—Ç
# –í–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ
end_shift_production_kb = InlineKeyboardBuilder()
end_shift_production_kb.add(
    InlineKeyboardButton(text="üî¥ –ó–∞–≤–µ—Ä—à–∏—Ç–∏ –∑–º—ñ–Ω—É –∑ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞", callback_data="end_shift_production"))
end_shift_production_kb = end_shift_production_kb.as_markup()

# –ü–∞–∫—É–≤–∞–Ω–Ω—è
end_shift_packaging_kb = InlineKeyboardBuilder()
end_shift_packaging_kb.add(
    InlineKeyboardButton(text="üî¥ –ó–∞–≤–µ—Ä—à–∏—Ç–∏ –∑–º—ñ–Ω—É –∑ –ø–∞–∫—É–≤–∞–Ω–Ω—è", callback_data="end_shift_packaging"))
end_shift_packaging_kb = end_shift_packaging_kb.as_markup()

# –ü—Ä–æ–¥–∞–∂
end_shift_sales_kb = InlineKeyboardBuilder()
end_shift_sales_kb.add(InlineKeyboardButton(text="üî¥ –ó–∞–≤–µ—Ä—à–∏—Ç–∏ –∑–º—ñ–Ω—É –∑ –ø—Ä–æ–¥–∞–∂—É", callback_data="end_shift_sales"))
end_shift_sales_kb = end_shift_sales_kb.as_markup()

# Deprecated - –±—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–æ –≤ –º–∞–π–±—É—Ç–Ω—ñ—Ö –≤–µ—Ä—Å—ñ—è—Ö
# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ –∑ —ñ—Å–Ω—É—é—á–∏–º –∫–æ–¥–æ–º
end_shift_kb = InlineKeyboardBuilder()
end_shift_kb.add(InlineKeyboardButton(text="üî¥ –ó–∞–≤–µ—Ä—à–∏—Ç–∏ –ø–æ—Ç–æ—á–Ω—É –∑–º—ñ–Ω—É", callback_data="end_shift"))
end_shift_kb = end_shift_kb.as_markup()


async def get_users_keyboard(users, current_user_id, include_nobody=False):
    """–°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏ –¥–ª—è –≤–∏–±–æ—Ä—É –ø–∞—Ä—Ç–Ω–µ—Ä–∞"""
    keyboard = []
    row = []

    # –î–æ–¥–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —É –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
    for i, user in enumerate(users):
        # –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        if user.id == current_user_id:
            continue

        # –§–æ—Ä–º—É—î–º–æ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
        button_text = f"{user.username if user.username else f'user'} ({user.id})"

        # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –≤ —Ä—è–¥–æ–∫
        row.append(KeyboardButton(text=button_text))

        # –Ø–∫—â–æ –≤ —Ä—è–¥–∫—É –≤–∂–µ 2 –∫–Ω–æ–ø–∫–∏ –∞–±–æ —Ü–µ –æ—Å—Ç–∞–Ω–Ω—ñ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á, –¥–æ–¥–∞—î–º–æ —Ä—è–¥–æ–∫ –≤ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
        if len(row) == 2 or i == len(users) - 1:
            keyboard.append(row.copy())
            row = []

    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É "–ù—ñ—Ö—Ç–æ", —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
    if include_nobody:
        keyboard.append([KeyboardButton(text="üôÖ‚Äç‚ôÇÔ∏è –ù—ñ—Ö—Ç–æ")])

    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
    keyboard.append([KeyboardButton(text="üîô –ù–∞–∑–∞–¥"), KeyboardButton(text="üè† –ú–µ–Ω—é")])

    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_multiselect_partners_kb(users: list, user_id: int, selected_partners: list = None,
                                nobody_selected: bool = False) -> InlineKeyboardMarkup:
    """
    –°—Ç–≤–æ—Ä—é—î —ñ–Ω–ª–∞–π–Ω-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –≤–∏–±–æ—Ä—É –∫—ñ–ª—å–∫–æ—Ö –ø–∞—Ä—Ç–Ω–µ—Ä—ñ–≤ –∑ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—é –ø–æ–∑–Ω–∞—á–∏—Ç–∏/–∑–Ω—è—Ç–∏ –ø–æ–∑–Ω–∞—á–∫—É
    
    Args:
        users: —Å–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
        user_id: ID –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        selected_partners: —Å–ø–∏—Å–æ–∫ ID –≤–∏–±—Ä–∞–Ω–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä—ñ–≤
        nobody_selected: —á–∏ –≤–∏–±—Ä–∞–Ω–æ "–ù—ñ–∫–æ–≥–æ"
    
    Returns:
        InlineKeyboardMarkup: —ñ–Ω–ª–∞–π–Ω-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏
    """
    if selected_partners is None:
        selected_partners = []

    kb = InlineKeyboardBuilder()

    # –î–æ–¥–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    for user in users:
        if user.id != user_id:  # –ù–µ –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            # –í–∏–∑–Ω–∞—á–∞—î–º–æ, —á–∏ –≤–∏–±—Ä–∞–Ω–∏–π —Ü–µ–π –ø–∞—Ä—Ç–Ω–µ—Ä
            is_selected = user.id in selected_partners

            # –î–æ–¥–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª (‚úÖ –∞–±–æ ‚¨úÔ∏è)
            mark = "‚úÖ" if is_selected and not nobody_selected else "‚¨úÔ∏è"

            # –§–æ—Ä–º—É—î–º–æ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –∑ username –∞–±–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            display_name = f"@{user.username}" if user.username else f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user.id}"

            kb.button(
                text=f"{mark} {display_name}",
                callback_data=f"select_partner_{user.id}"
            )

    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥–∏ –ø–æ 2
    kb.adjust(2)

    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É "–ù—ñ–∫–æ–≥–æ"
    nobody_mark = "‚úÖ" if nobody_selected else "‚¨úÔ∏è"
    kb.row(
        InlineKeyboardButton(
            text=f"{nobody_mark} –ü—Ä–∞—Ü—é–≤–∞—Ç–∏ —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ",
            callback_data="select_nobody"
        )
    )

    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
    kb.row(
        InlineKeyboardButton(
            text="‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –æ–±—Ä–∞–Ω–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä—ñ–≤",
            callback_data="confirm_partners"
        )
    )

    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è
    kb.row(
        InlineKeyboardButton(
            text="üîô –°–∫–∞—Å—É–≤–∞—Ç–∏ –≤–∏–±—ñ—Ä",
            callback_data="cancel_partners"
        )
    )

    return kb.as_markup()
